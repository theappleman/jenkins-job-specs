- defaults:
    name: global
    github: AsteroidOS
    kernel: msm
    android: lollipop

- job-template:
        name: 'asteroid-image-{watch}'
        scm:
        - git:
            url: https://github.com/AsteroidOS/asteroid
            branches:
            - '*/master'
            skip-tag: true
            wipe-workspace: false
        builders:
        - shell: |
            rm -f '*.tar'
            rm -fr build/
        - cx: { proj: oe-core }
        - cx: { proj: meta-openembedded }
        - cx: { proj: meta-smartphone }
        - cx: { proj: meta-qt5 }
        - cx: { proj: meta-asteroid }
        - cx: { proj: 'meta-bass-hybris' }
        - cx: { proj: 'meta-dory-hybris' }
        - cx: { proj: 'meta-tetra-hybris' }
        - cx: { proj: 'meta-sparrow-hybris' }
        - copyextract:
            proj: asteroid-bitbake
            path: oe-core/bitbake
        - shell: |
            . ./prepare-build.sh {watch}
            bitbake asteroid-image
            bitbake meta-toolchain-qt5
        publishers:
        - archive:
            artifacts: 'build/tmp-glibc/deploy/images/{watch}/*,build/tmp-glibc/deploy/sdk/*'
            fingerprint: true
        triggers:
        - reverse:
            jobs:
            - asteroid-oe-core
            - asteroid-bitbake
            - asteroid-meta-asteroid
            - asteroid-meta-{watch}-hybris
            - asteroid-meta-openembedded
            - asteroid-meta-qt5
            - asteroid-meta-smartphone
            result: success

- job-template:
        name: 'asteroid-{repo}'
        scm:
        - git:
            clean:
              before: true
            url: '{url}'
            branches:
            - '{branch}'
            skip-tag: true
        builders:
        - shell: |
            tempfile=$(mktemp)
            tar cf $tempfile .
            cp $tempfile $BUILD_TAG.tar
        publishers:
        - archive:
            artifacts: "*.tar"
            fingerprint: true
        - downstream-ext:
            projects:
            - asteroid-image-dory
            - asteroid-image-bass
            - asteroid-image-tetra
            - asteroid-image-sparrow
            only-on-local-scm-change: true
        properties:
        - copyartifact:
            projects: asteroid-image-*
        triggers:
        - pollscm:
            cron: "H H * * *"

- job-template:
        name: 'asteroid-meta-{watch}-hybris'
        scm:
        - git:
            clean:
              before: true
            url: 'https://github.com/{github}/meta-{watch}-hybris'
            branches:
            - '*/master'
            skip-tag: true
        builders:
        - shell: |
            tempfile=$(mktemp)
            tar cf $tempfile .
            cp $tempfile $BUILD_TAG.tar
        publishers:
        - archive:
            artifacts: "*.tar"
            fingerprint: true
        - downstream-ext:
            projects:
            - asteroid-image-{watch}
            only-on-local-scm-change: true
        properties:
        - copyartifact:
            projects: asteroid-image-{watch}
        triggers:
        - pollscm:
            cron: "H H * * *"

- builder:
    name: copyextract
    builders:
    - copyartifact:
        project: '{proj}'
    - shell: |
        mkdir -p src/{path}
        tar xf jenkins-{proj}-*.tar -C src/{path}

- builder:
    name: cx
    builders:
    - copyextract:
        proj: 'asteroid-{proj}'
        path: '{proj}'

- project:
        name: meta-asteroid-repos
        repo:
        - oe-core:
            url: git://git.openembedded.org/openembedded-core
            branch: '*/krogoth'
        - meta-openembedded:
            url: https://github.com/openembedded/meta-openembedded.git
            branch: '*/krogoth'
        - meta-smartphone:
            url: https://github.com/shr-distribution/meta-smartphone
            branch: '*/krogoth'
        - meta-qt5:
            url: https://github.com/meta-qt5/meta-qt5.git
            branch: '*/krogoth'
        - bitbake:
            url: git://git.openembedded.org/bitbake
            branch: '*/1.30'
        - meta-asteroid:
            url: https://github.com/AsteroidOS/meta-asteroid
            branch: '*/master'
        jobs:
        - 'asteroid-{repo}'

- project:
        name: asteroid-images
        jobs:
        - 'asteroid-image-{watch}'
        - 'asteroid-meta-{watch}-hybris'
        - 'asteroid-kernel-{kernel}-{watch}'
        watch:
        - dory
        - bass
        - tetra:
            kernel: bcm
        - sparrow:
            android: marshmallow

- job-template:
    name: asteroid-kernel-{kernel}-{watch}
    scm:
    - git:
        url: https://android.googlesource.com/kernel/{kernel}
        branches:
        - '*/android-{kernel}-{watch}-3.10-{android}-mr1-wear-release'
        skip-tag: true
        timeout: 60
    builders:
    - shell: make ARCH=arm {watch}_defconfig
    publishers:
    - archive:
        artifacts: .config
        fingerprint: true

- job:
    name: asteroid-aosp-msm8226
    builders:
    - shell: |
        test -d aosp || mkdir aosp
        if test -f repo; then
                pushd aosp
        else
                curl https://storage.googleapis.com/git-repo-downloads/repo > repo
                chmod a+x repo
                pushd aosp
                ../repo init -u https://github.com/AsteroidOS/android_manifest || true
        fi

        ../repo sync

        . build/envsetup.sh
        export TARGET_USES_C2D_COMPOSITION=true
        export TARGET_USES_QCOM_BSP=true
        export TARGET_BOARD_PLATFORM=msm8226

        grep -q msm8x26/kernel-headers hardware/qcom/display/msm8226/common.mk || \
                tee -a hardware/qcom/display/msm8226/common.mk <<<'common_includes += $(LOCAL_PATH)/../../../msm8x26/kernel-headers'

        mmma hardware/qcom/display/msm8226/
        mmma frameworks/native/cmds/servicemanager/
        mmma system/core/logd/
        mmma system/core/init/
        popd

        ./aosp/libhybris/utils/extract-headers.sh aosp include

        test -d system || mkdir system
        cp -r aosp/out/target/product/generic/system/* system
        test -d system/bin || mkdir system/bin
        cp aosp/out/target/product/generic/root/init system/bin

        tar cf system.tar system include
    publishers:
    - archive:
        artifacts: system.tar
        fingerprint: true
